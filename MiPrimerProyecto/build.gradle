/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'CltControl' at '29/12/15 11:10' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

checkstyle {
	toolVersion= 6.5
	ignoreFailures = true
}

pmd {
ruleSets = [	"java-android",
			 	"java-basic", 
			 	"java-braces", 
			 	"java-codesize",
			 	"java-unusedcode",
			 	"java-logging-jakarta-commons"]
ignoreFailures = true
}

tasks.withType (Pmd){
	reports {
		xml.enabled = false
		
		html.enabled = true
	}
}

findbugs{
	ignoreFailures = true
}


findbugsMain{
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

findbugsTest{
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

jacocoTestReport {
	group = "Reporting"
	description = "Generar reportes de cobertura Jacoco"
	additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1+'
}
